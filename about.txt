для более удобной адресации в конфигурации вебпака добавим поле context.
который указывает выбпаку директорию с исходными файлами проекта

context: path.resolve(__dirname, 'src'),
при этом, заменим все пути, которые прописаны в конфиге, удалив src.
например
было main: './src/index.js',
стало main: './index.js'

теперь перейдем к работе с css.

создадим в src папку для стилей styles. а так же файл стилей styles.css, в который добавим стили приложения

после последующих действий будет возможность подключить стили прямо в файл скрипта, чтобы не подключать его в html файле.
синтаксис будет следующий
import './styles/styles.css';

пропишем этот импорт в index.js

при сборке произойдет ошибка.
для корректной работы вебпка с css файлами необходимы loader'ы (т.к. вебпак работает только с js и json файлами)

для этого добавляем поле module в конфигурации. добавляем массив объектов правил (rules)
поле test - регулярное выражение, в котором прописано расширение файлов для обработки
use - массив лоадеров, которые будут обрабатывать нужные файлы.
порядок в массиве - справа налево (самый правый лоадер будет применен самым первым)

а так же необходимо установить эти лоадеры
npm i -D style-loader css-loader

после очередной сборки приложения, все импротриованные стили были добавлены в динамически сгенерированном теге style в секции head
